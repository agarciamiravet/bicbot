<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="HelpMessage" xml:space="preserve">
    <value>¿En qué necesitas ayuda?</value>
  </data>
  <data name="LigthsOffMessage" xml:space="preserve">
    <value>¿Qué luz de la casa quieres apagar?</value>
  </data>
  <data name="LIgthsOnMessage" xml:space="preserve">
    <value>¿Qué parte de la casa quieres encender?</value>
  </data>
  <data name="PromptInvalidOptionMessage" xml:space="preserve">
    <value>Esta no es una opción válida</value>
  </data>
  <data name="AuthLoginRequired" xml:space="preserve">
    <value>Antes de poder hablar a tu casa por favor haz login</value>
  </data>
  <data name="AuthLoginSucceded" xml:space="preserve">
    <value>Autenticación realizada con éxito</value>
  </data>
  <data name="BlindDownBedroom" xml:space="preserve">
    <value>Persiana de la habitación bajada</value>
  </data>
  <data name="BlindDownHomeAll" xml:space="preserve">
    <value>Persianas de la casa bajadas</value>
  </data>
  <data name="BlindDownKitchen" xml:space="preserve">
    <value>Persiana de la cocina bajada</value>
  </data>
  <data name="BlindDownMailbox" xml:space="preserve">
    <value>Persiana del buzón bajada</value>
  </data>
  <data name="BlindUpBedroom" xml:space="preserve">
    <value>Persiana de la habitación subida</value>
  </data>
  <data name="BlindUpHomeAll" xml:space="preserve">
    <value>Todas las persianas de la casa subidas</value>
  </data>
  <data name="BlindUpKitchen" xml:space="preserve">
    <value>Persiana de la cocina subida</value>
  </data>
  <data name="BlindUpMailBox" xml:space="preserve">
    <value>Persiana del correo subida</value>
  </data>
  <data name="LightOffBathroomMessage" xml:space="preserve">
    <value>Apagada la luz del baño</value>
  </data>
  <data name="LightOffEntranceHallMessage" xml:space="preserve">
    <value>Apagada la luz del recibidor</value>
  </data>
  <data name="LightOffHomeMessage" xml:space="preserve">
    <value>Apagadas todas las luces de la casa</value>
  </data>
  <data name="LightOffKitchenMessage" xml:space="preserve">
    <value>Apagada la luz de la cocina</value>
  </data>
  <data name="LightOnBathroomMessage" xml:space="preserve">
    <value>Enciendida la luz del baño</value>
  </data>
  <data name="LightOnEntranceHallMessage" xml:space="preserve">
    <value>Enciendida la luz del recibidor</value>
  </data>
  <data name="LightOnHomeMessage" xml:space="preserve">
    <value>Encendidas todas las luces de la casa</value>
  </data>
  <data name="LightOnKitchenMessage" xml:space="preserve">
    <value>Enciendida la luz de la cocina</value>
  </data>
  <data name="LigthOffBedroomMessage" xml:space="preserve">
    <value>Apagada la luz de la habitación</value>
  </data>
  <data name="LigthOnBedroomMessage" xml:space="preserve">
    <value>Enciendida la luz de la habitación</value>
  </data>
  <data name="SmsActionNotUnderstanding" xml:space="preserve">
    <value>Acción no entendida. Ejemplo: encender luz cocina</value>
  </data>
  <data name="SmsUserNotLogged" xml:space="preserve">
    <value>Crea un código de acceso de tu App de autenticación</value>
  </data>
  <data name="MessageHal9000" xml:space="preserve">
    <value>Lo siento Dave, me temo que no puedo hacer eso</value>
  </data>
  <data name="DirectLineMessageLogin" xml:space="preserve">
    <value>Por favor facilítame un código de acceso creado desde tu app de autenticación</value>
  </data>
  <data name="GreetingNight" xml:space="preserve">
    <value>Hola buenas noches</value>
  </data>
  <data name="GreetingsLater" xml:space="preserve">
    <value>Hola buenas tardes</value>
  </data>
  <data name="GreetingsMorning" xml:space="preserve">
    <value>Hola buenos días</value>
  </data>
  <data name="UserMessageNotUnderstanding" xml:space="preserve">
    <value>No te entendí un carajo</value>
  </data>
</root>